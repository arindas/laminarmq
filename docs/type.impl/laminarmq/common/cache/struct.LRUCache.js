(function() {var type_impls = {
"laminarmq":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Cache%3CK,+T%3E-for-LRUCache%3CV,+K,+T,+M%3E\" class=\"impl\"><a href=\"#impl-Cache%3CK,+T%3E-for-LRUCache%3CV,+K,+T,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, K, T, M&gt; <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt; for <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;<div class=\"where\">where\n    V: Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt;,\n    M: <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt;,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"laminarmq/common/cache/enum.LRUCacheError.html\" title=\"enum laminarmq::common::cache::LRUCacheError\">LRUCacheError</a>&lt;&lt;V as Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt;&gt;::Error, &lt;M as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Map.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Map::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Associated error type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method trait-impl\"><a href=\"#method.insert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.insert\" class=\"fn\">insert</a>(\n    &amp;mut self,\n    key: K,\n    value: T\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"laminarmq/common/cache/enum.Eviction.html\" title=\"enum laminarmq::common::cache::Eviction\">Eviction</a>&lt;K, T&gt;, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Inserts the given key/value pair into this cache.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.remove\" class=\"fn\">remove</a>(\n    &amp;mut self,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"laminarmq/common/cache/enum.Lookup.html\" title=\"enum laminarmq::common::cache::Lookup\">Lookup</a>&lt;T&gt;, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Removes the key/value pair associated with the given key from this cache.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.shrink\" class=\"fn\">shrink</a>(\n    &amp;mut self,\n    new_capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Removes <code>(self.len() - new_capacity)</code> cache blocks to fit the new capacity. If the\ndifference is non-positive no cache blocks are removed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method trait-impl\"><a href=\"#method.reserve\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.reserve\" class=\"fn\">reserve</a>(\n    &amp;mut self,\n    additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reserves additional memory to accomodate the given number of additional cache blocks.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method trait-impl\"><a href=\"#method.query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.query\" class=\"fn\">query</a>(\n    &amp;mut self,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;K</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"laminarmq/common/cache/enum.Lookup.html\" title=\"enum laminarmq::common::cache::Lookup\">Lookup</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;T</a>&gt;, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Queries this cache to find the value associated with given key.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capacity\" class=\"method trait-impl\"><a href=\"#method.capacity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.capacity\" class=\"fn\">capacity</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the current capacity of this cache.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of key/value pairs stored in this cache.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether this cache is empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt; as <a class=\"trait\" href=\"laminarmq/common/cache/trait.Cache.html\" title=\"trait laminarmq::common::cache::Cache\">Cache</a>&lt;K, T&gt;&gt;::<a class=\"associatedtype\" href=\"laminarmq/common/cache/trait.Cache.html#associatedtype.Error\" title=\"type laminarmq::common::cache::Cache::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Remove all items from this cache until it’s empty.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_maxed\" class=\"method trait-impl\"><a href=\"#method.is_maxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"laminarmq/common/cache/trait.Cache.html#method.is_maxed\" class=\"fn\">is_maxed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether this cache is maxed out. <a href=\"laminarmq/common/cache/trait.Cache.html#method.is_maxed\">Read more</a></div></details></div></details>","Cache<K, T>","laminarmq::common::cache::AllocLRUCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-LRUCache%3CV,+K,+T,+M%3E\" class=\"impl\"><a href=\"#impl-Default-for-LRUCache%3CV,+K,+T,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, K, T, M&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;<div class=\"where\">where\n    V: Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    M: <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","laminarmq::common::cache::AllocLRUCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"impl\"><a href=\"#impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, K, T, M&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;<div class=\"where\">where\n    V: Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt;,\n    M: <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_backing_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"laminarmq/common/cache/struct.LRUCache.html#tymethod.with_backing_vector\" class=\"fn\">with_backing_vector</a>(vector: V) -&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an <a href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\"><code>LRUCache</code></a> instance with the given [<code>Vector</code>] implementation instance\nand the default <a href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\"><code>Map</code></a> implementation value.</p>\n</div></details></div></details>",0,"laminarmq::common::cache::AllocLRUCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"impl\"><a href=\"#impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, K, T, M&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;<div class=\"where\">where\n    V: Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt;,\n    M: <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.least_recent\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"laminarmq/common/cache/struct.LRUCache.html#tymethod.least_recent\" class=\"fn\">least_recent</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;T</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the least recently used key/value pair.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.most_recent\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"laminarmq/common/cache/struct.LRUCache.html#tymethod.most_recent\" class=\"fn\">most_recent</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;K</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;T</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the most recently used key/value pair.</p>\n</div></details></div></details>",0,"laminarmq::common::cache::AllocLRUCache"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"impl\"><a href=\"#impl-LRUCache%3CV,+K,+T,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;V, K, T, M&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;<div class=\"where\">where\n    V: Vector&lt;Entry&lt;Node&lt;Block&lt;K, T&gt;&gt;&gt;&gt;,\n    M: <a class=\"trait\" href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\">Map</a>&lt;K, <a class=\"struct\" href=\"laminarmq/common/cache/struct.Link.html\" title=\"struct laminarmq::common::cache::Link\">Link</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_backing_vector_and_map\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"laminarmq/common/cache/struct.LRUCache.html#tymethod.with_backing_vector_and_map\" class=\"fn\">with_backing_vector_and_map</a>(vector: V, map: M) -&gt; <a class=\"struct\" href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\">LRUCache</a>&lt;V, K, T, M&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an <a href=\"laminarmq/common/cache/struct.LRUCache.html\" title=\"struct laminarmq::common::cache::LRUCache\"><code>LRUCache</code></a> instance with the given the backing [<code>Vector</code>] and <a href=\"laminarmq/common/cache/trait.Map.html\" title=\"trait laminarmq::common::cache::Map\"><code>Map</code></a>\nimplementation instances.</p>\n</div></details></div></details>",0,"laminarmq::common::cache::AllocLRUCache"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()