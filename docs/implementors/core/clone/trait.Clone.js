(function() {var implementors = {
"laminarmq":[["impl&lt;S, PASP, Idx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/common/struct.DiskBackedSegmentStorageProvider.html\" title=\"struct laminarmq::storage::impls::common::DiskBackedSegmentStorageProvider\">DiskBackedSegmentStorageProvider</a>&lt;S, PASP, Idx&gt;<span class=\"where fmt-newline\">where\n    PASP: <a class=\"trait\" href=\"laminarmq/storage/impls/common/trait.PathAddressedStorageProvider.html\" title=\"trait laminarmq::storage::impls::common::PathAddressedStorageProvider\">PathAddressedStorageProvider</a>&lt;S&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"laminarmq/storage/trait.Storage.html\" title=\"trait laminarmq::storage::Storage\">Storage</a>,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"laminarmq/storage/impls/glommio/consume/enum.ConsumeMethod.html\" title=\"enum laminarmq::storage::impls::glommio::consume::ConsumeMethod\">ConsumeMethod</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/commit_log/segmented_log/index/struct.IndexRecord.html\" title=\"struct laminarmq::storage::commit_log::segmented_log::index::IndexRecord\">IndexRecord</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/tokio/storage/std_seek_read/struct.StdSeekReadFileStorageProvider.html\" title=\"struct laminarmq::storage::impls::tokio::storage::std_seek_read::StdSeekReadFileStorageProvider\">StdSeekReadFileStorageProvider</a>"],["impl&lt;Idx: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Size: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/commit_log/segmented_log/struct.Config.html\" title=\"struct laminarmq::storage::commit_log::segmented_log::Config\">Config</a>&lt;Idx, Size&gt;"],["impl&lt;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Idx: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/commit_log/segmented_log/struct.MetaWithIdx.html\" title=\"struct laminarmq::storage::commit_log::segmented_log::MetaWithIdx\">MetaWithIdx</a>&lt;M, Idx&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/tokio/storage/std_random_read/struct.StdRandomReadFileStorageProvider.html\" title=\"struct laminarmq::storage::impls::tokio::storage::std_random_read::StdRandomReadFileStorageProvider\">StdRandomReadFileStorageProvider</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/glommio/storage/buffered/struct.BufferedStorageProvider.html\" title=\"struct laminarmq::storage::impls::glommio::storage::buffered::BufferedStorageProvider\">BufferedStorageProvider</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/commit_log/segmented_log/store/common/struct.RecordHeader.html\" title=\"struct laminarmq::storage::commit_log::segmented_log::store::common::RecordHeader\">RecordHeader</a>"],["impl&lt;Size: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/commit_log/segmented_log/segment/struct.Config.html\" title=\"struct laminarmq::storage::commit_log::segmented_log::segment::Config\">Config</a>&lt;Size&gt;"],["impl&lt;Idx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/in_mem/segment/struct.InMemSegmentStorageProvider.html\" title=\"struct laminarmq::storage::impls::in_mem::segment::InMemSegmentStorageProvider\">InMemSegmentStorageProvider</a>&lt;Idx&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"laminarmq/storage/impls/glommio/storage/dma/struct.DmaStorageProvider.html\" title=\"struct laminarmq::storage::impls::glommio::storage::dma::DmaStorageProvider\">DmaStorageProvider</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.72.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"laminarmq/server/impls/glommio/hyper_compat/enum.ConnControl.html\" title=\"enum laminarmq::server::impls::glommio::hyper_compat::ConnControl\">ConnControl</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()